<?xml version="1.0" encoding="UTF-8"?>
<odoo>
    <template id="portal_my_home" inherit_id="portal.portal_my_home">


        <xpath expr="//div[hasclass('o_portal_docs')]" position="inside">
            <!-- <t t-call="portal.portal_docs_entry">
                <t t-set="url" t-value="'/sample/create'" />
                <t t-set="title" t-value="'Sample Test'" />
            </t> -->
            <t t-call="portal.portal_docs_entry">
                <t t-set="url" t-value="'/sampleRequestList'" />
                <t t-set="title" t-value="'Request Sample Test'" />
            </t>
            <t t-call="portal.portal_docs_entry">
                <t t-set="url" t-value="'/viewReports'" />
                <t t-set="title" t-value="'View Reports'" />
            </t>
            <t t-call="portal.portal_docs_entry">
                <t t-set="url" t-value="'/viewDocuments'" />
                <t t-set="title" t-value="'Documents'" />
            </t>

          
        </xpath>
       

    </template>

    <template id="sample_requests_list" name="Sample Requests">
        <t t-call="portal.portal_layout">
            <div class="container">
                <a t-att-href="'/sampleRequests'" class="btn btn-primary mb-3">
                    Add Sample Request
                </a>

                <!-- Pagination controls at the top -->
                <div class="row mb-3">
                    <div class="col-md-6">
                        <span t-if="page &gt; 1">
                            <a t-att-href="'/sampleRequestList?page=%s' % (page-1)" class="btn btn-sm btn-outline-primary">
                                Previous
                            </a>
                        </span>
                        <span class="mx-2">Page <t t-esc="page"/> of <t t-esc="total_pages"/></span>
                        <span t-if="page &lt; total_pages">
                            <a t-att-href="'/sampleRequestList?page=%s' % (page+1)" class="btn btn-sm btn-outline-primary">
                                Next
                            </a>
                        </span>
                    </div>
                    <div class="col-md-6 text-right">
                        <span class="text-muted">
                            Showing <t t-esc="offset+1"/> to <t t-esc="min(offset+limit, total)"/> of <t t-esc="total"/> records
                        </span>
                    </div>
                </div>

                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Date</th>
                            <th>Project</th>
                            <th>Materials</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <t t-foreach="csr or []" t-as="req">
                            <tr>
                                <td>
                                    <t t-if="req.date">
                                        <t t-esc="req.date.strftime('%Y-%m-%d')"/>
                                    </t>
                                </td>
                                <td><t t-esc="req.project.project_name"/></td>
                                <td>
                                    <t t-foreach="req.samples" t-as="product">
                                        <span class="badge badge-primary">
                                            <t t-esc="product.product_id.lab_name"/>
                                        </span>
                                    </t>
                                </td>
                                <td>
                                    <t t-if="req.state == 'draft'">
                                        <span class="badge badge-secondary">
                                            <t t-esc="req.state"/>
                                        </span>
                                    </t>
                                    <t t-else="">
                                        <span class="badge badge-primary">
                                            <t t-esc="req.state"/>
                                        </span>
                                    </t>
                                </td>
                                <td>
                                    <a t-attf-href="/viewSampleRequests/{{req.id}}" class="btn btn-sm btn-outline-info mr-2">
                                        <i class="fa fa-eye"></i> View
                                    </a>
                                    <t t-if="req.state == 'draft'">
                                        <button t-att-data-req_id="req.id" onclick="confirmDelete(this)" class="btn btn-sm btn-outline-danger">
                                            <i class="fa fa-trash"></i> Delete
                                        </button>
                                    </t>
                                </td>
                            </tr>
                        </t>
                        <t t-if="not csr">
                            <tr>
                                <td colspan="5" class="text-center">No records found</td>
                            </tr>
                        </t>
                    </tbody>
                </table>

                <!-- Pagination controls at the bottom -->
                <div class="row mt-3">
                    <div class="col-md-12 text-center">
                        <span t-if="page &gt; 1">
                            <a t-att-href="'/sampleRequestList?page=%s' % (page-1)" class="btn btn-sm btn-outline-primary">
                                Previous
                            </a>
                        </span>
                        <t t-foreach="range(1, total_pages+1)" t-as="p">
                            <a t-attf-href="/sampleRequestList?page={{p}}"
                            t-att-class="'btn btn-sm ' + ('btn-primary' if p == page else 'btn-outline-primary')">
                                <t t-esc="p"/>
                            </a>
                        </t>
                        <span t-if="page &lt; total_pages">
                            <a t-att-href="'/sampleRequestList?page=%s' % (page+1)" class="btn btn-sm btn-outline-primary">
                                Next
                            </a>
                        </span>
                    </div>
                </div>
            </div>

            <!-- Confirmation Modal -->
            <div class="modal fade" id="confirmDeleteModal" tabindex="-1" role="dialog" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Confirm Deletion</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">x</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            Are you sure you want to delete this sample request?
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                            <a id="confirmDeleteBtn" href="#" class="btn btn-danger">Delete</a>
                        </div>
                    </div>
                </div>
            </div>
        </t>

        <script>
        function confirmDelete(button) {
            // Get the request ID from the button's data attribute
            var reqId = button.getAttribute('data-req_id');
            
            // Set the delete URL in the confirmation button
            var deleteBtn = document.getElementById('confirmDeleteBtn');
            deleteBtn.href = '/deleteSampleRequest/' + reqId;
            
            // Show the modal
            $('#confirmDeleteModal').modal('show');
        }
        </script>

    </template>

    <template id="sample_requests_form" name="Sample Request Form">
        <!-- <t t-call="portal.portal_layout">
            <div class="container">

            </div>
        </t> -->
        <t t-call="portal.portal_layout">
                <t t-set="title">Sample Request Form</t>
                <div class="container mt16 mb16">
                    <div class="row">
                        <div class="col-md-12">
                            <form method="post" class="oe_form" enctype="multipart/form-data" t-att-action="'/createSampleRequest'">
                                <input type="hidden" name="csrf_token" t-att-value="request.csrf_token()"/>
                                
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        <h3 class="panel-title">New Request</h3>
                                    </div>
                                    <div class="panel-body">
                                        <div class="form-group row">
                                            

                                            <label class="col-md-1 col-form-label">Alias</label>
                                            <div class="col-md-11">
                                                <select id="customer_select" name="customer_id" class="form-control" onchange="changeCustomer(this)" required="1">
                                                    <option value="">-- Select Alias --</option>
                                                    <t t-foreach="customers" t-as="customer">
                                                        <option t-att-value="customer.id" t-esc="customer.name"/>
                                                    </t>
                                                </select>
                                            </div>
                                        </div>
                                        <!-- Project Selection -->
                                        <div class="form-group row">
                                            <label class="col-md-1 col-form-label">Project</label>
                                            <div class="col-md-5">
                                                <select id="project_select" name="project_id" class="form-control" required="1">
                                                    <option value="">-- Select Project --</option>
                                                    <t t-foreach="projects" t-as="project">
                                                        <option t-att-value="project.id" t-esc="project.project_name"/>
                                                    </t>
                                                </select>
                                            </div>
                                            <label class="col-md-1 col-form-label">Attachment</label>
                                            <div class="col-md-5">
                                                <input type="file" id="attachment" name="attachment" class="form-control"/>
                                            </div>
                                        </div>
                                        
                                        <!-- Date Field -->
                                        <div class="form-group row">
                                            <label class="col-md-1 col-form-label">Date</label>
                                            <div class="col-md-2">
                                                <input type="date" name="request_date" class="form-control" t-att-value="current_date" required="1"/>
                                            </div>

                                            <label class="col-md-2 col-form-label">Billing Party</label>
                                            <div class="col-md-7">
                                                <select id="billing_customer_select" name="billing_customer_id" class="form-control">
                                                    <option value="">-- Select Billing Party --</option>
                                                    <t t-foreach="customers" t-as="billing_customer">
                                                        <option t-att-value="billing_customer.id" t-esc="billing_customer.name"/>
                                                    </t>
                                                </select>
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            
                                        </div>
                                        
                                        <!-- One2Many Table -->
                                        <div class="form-group row">
                                            <label class="col-md-1 col-form-label">Samples</label>
                                            <div class="col-md-11">
                                                <table class="table table-bordered" id="samples_table">
                                                    <thead>
                                                        <tr>
                                                            <th>Group</th>
                                                            <th>Product</th>
                                                            <th>Grade</th>
                                                            <th>Size</th>
                                                            <!-- <th>Quantity</th> -->
                                                            <th>Description</th>
                                                            <th>Parameters</th>
                                                            <th>Action</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody id="line_items">
                                                        <!-- Lines will be added here via JS -->
                                                    </tbody>
                                                </table>
                                                <button type="button" class="btn btn-primary" onclick="openLineModal()">
                                                    <i class="fa fa-plus"/> Add Sample
                                                </button>
                                            </div>
                                        </div>
                                        
                                        <div class="text-right">
                                            <button type="submit" class="btn btn-primary">Submit Request</button>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
                
                <!-- Modal for adding lines -->
                <div class="modal fade" id="lineModal" tabindex="-1" role="dialog">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title">Add Sample</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">Close</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <div class="form-group">
                                    <label>Discipline</label>
                                    <select id="discipline_select" class="form-control discipline-select" onchange="changeDiscipline(this)">
                                        <option value="">-- Select Discipline --</option>
                                        <t t-foreach="env['lerm_civil.discipline'].sudo().search([])" t-as="discipline">
                                            <option t-att-value="discipline.id" t-esc="discipline.discipline"/>
                                        </t>
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label>Group</label>
                                    <select id="group_select" class="form-control group-select" onchange="changeGroup(this)">
                                        <option value="">-- Select Group --</option>
                                        <!-- Groups will be loaded via JS -->
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label>Product</label>
                                    <select id="product_select" class="form-control product-select" onchange="changeProduct(this)">
                                        <option value="">-- Select Product --</option>
                                        <!-- Products will be loaded via JS -->
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label>Grade</label>
                                    <select id="grade_select" class="form-control product-select">
                                        <option value="">-- Select Grade --</option>
                                        <!-- Grades will be loaded via JS -->
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label>Size</label>
                                    <select id="size_select" class="form-control product-select">
                                        <option value="">-- Select Size --</option>
                                        <!-- Sizes will be loaded via JS -->
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label>Quantity</label>
                                    <input type="number" id="modal_quantity" class="form-control" value="1" min="1"/>
                                </div>
                                <div class="form-group">
                                    <label>Description</label>
                                    <textarea id="modal_description" class="form-control"></textarea>
                                </div>
                            </div>
                            <!-- from here -->
                            
                            <div class="form-group" style="padding: 1rem;">
                                <label>Parameters</label>
                                <div class="parameter-selection">
                                    <!-- Selected parameters will appear here -->
                                    <div id="selected_parameters" class="mb-2"></div>
                                    
                                    <!-- Button to open parameter selection modal -->
                                    <button type="button" class="btn btn-secondary" onclick="openParameterModal()">
                                        <i class="fa fa-plus"/> Select Parameters
                                    </button>
                                    
                                    <!-- Hidden field to store selected parameter IDs -->
                                    <input type="hidden" name="parameter_ids" id="parameter_ids"/>
                                </div>
                            </div>
                            <!-- Parameter Selection Modal -->
                            <div class="modal fade" id="parameterModal" tabindex="-1" role="dialog">
                                <div class="modal-dialog modal-lg" role="document">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title">Select Parameters</h5>
                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                <span aria-hidden="true">close</span>
                                            </button>
                                        </div>
                                        <div class="modal-body">
                                            <div class="form-group">
                                                <label>Parameters</label>
                                                <select id="parameter_select" class="form-control parameter-select" multiple="multiple">
                                                    <!-- Parameters will be loaded via JS -->
                                                    
                                                </select>
                                                <small class="form-text text-muted">Hold Ctrl/Cmd to select multiple parameters</small>
                                            </div>
                                            <div class="row" id="parameterList">
                                                <!-- Parameters will be loaded here via JS -->
                                            </div>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                                            <button type="button" class="btn btn-primary" onclick="saveParameters()">Save Parameters</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- to here  -->
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                                <button type="button" class="btn btn-primary" onclick="addLineItem()">Add</button>
                            </div>
                        </div>
                    </div>
                </div>
                
                <script>
                <![CDATA[
                    function changeCustomer(element){
                        const customer_id = element.value
                        const projectSelect = document.getElementById('project_select');
                        projectSelect.innerHTML = '<option value="">-- Select Group --</option>';
                        

                        if (customer_id) {
                            // Show loading
                            projectSelect.innerHTML = '<option value="">Loading...</option>';
                            // Fetch projects for selected discipline
                            fetch('/lerm/get_projects', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                    
                                },
                                body: JSON.stringify({
                                    customer_id: customer_id
                                })
                            })
                            .then(response => response.json())
                            .then(data => {
                                const projectSelect = document.getElementById('project_select');
        
                                // Clear existing options except the first one
                                projectSelect.innerHTML = '<option value="">-- Select Group --</option>';
                                
                                // Check if we have projects in the response
                                if (data.result && data.result.projects && data.result.projects.length > 0) {
                                    // Enable the dropdown
                                    projectSelect.disabled = false;
                                    
                                    // Add each project as an option
                                    data.result.projects.forEach(project => {
                                        const option = document.createElement('option');
                                        option.value = project.id;
                                        option.textContent = project.name;
                                        projectSelect.appendChild(option);
                                    });
                                    
                                    console.log(`Loaded ${data.result.projects.length} projects`);
                                } else {
                                    // No projects found
                                    const option = document.createElement('option');
                                    option.value = '';
                                    option.textContent = 'No projects available';
                                    projectSelect.appendChild(option);
                                    projectSelect.disabled = true;
                                    
                                    console.warn('No projects found in response');
                                }
                            })
                            .catch(error => {
                                console.error('Error:', error);
                                projectSelect.innerHTML = '<option value="">Error loading projects</option>';
                            });
                        }

                    }
                    function changeDiscipline(element) {
                        const disciplineId = element.value;
                        const groupSelect = document.getElementById('group_select');
                        const productSelect = document.getElementById('product_select');
                        
                        // Reset dependent dropdowns
                        groupSelect.innerHTML = '<option value="">-- Select Group --</option>';
                        groupSelect.disabled = true;
                        productSelect.innerHTML = '<option value="">-- Select Product --</option>';
                        productSelect.disabled = true;
                        
                        if (disciplineId) {
                            // Show loading
                            groupSelect.innerHTML = '<option value="">Loading...</option>';
                            // Fetch groups for selected discipline
                            fetch('/lerm/get_groups', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                    
                                },
                                body: JSON.stringify({
                                    discipline_id: disciplineId
                                })
                            })
                            .then(response => response.json())
                            .then(data => {
                                const groupSelect = document.getElementById('group_select');
        
                                // Clear existing options except the first one
                                groupSelect.innerHTML = '<option value="">-- Select Group --</option>';
                                
                                // Check if we have groups in the response
                                if (data.result && data.result.groups && data.result.groups.length > 0) {
                                    // Enable the dropdown
                                    groupSelect.disabled = false;
                                    
                                    // Add each group as an option
                                    data.result.groups.forEach(group => {
                                        const option = document.createElement('option');
                                        option.value = group.id;
                                        option.textContent = group.name;
                                        groupSelect.appendChild(option);
                                    });
                                    
                                    console.log(`Loaded ${data.result.groups.length} groups`);
                                } else {
                                    // No groups found
                                    const option = document.createElement('option');
                                    option.value = '';
                                    option.textContent = 'No groups available';
                                    groupSelect.appendChild(option);
                                    groupSelect.disabled = true;
                                    
                                    console.warn('No groups found in response');
                                }
                            })
                            .catch(error => {
                                console.error('Error:', error);
                                groupSelect.innerHTML = '<option value="">Error loading groups</option>';
                            });
                        }
                    }
                    function changeProduct(element) {
                        const productId = element.value;
                        const parameterSelect = document.getElementById('parameter_select');

                        if (productId) {
                            // Show loading
                            parameterSelect.innerHTML = '<option value="">Loading...</option>';
                            // Fetch groups for selected discipline
                            fetch('/lerm/get_parameters', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                    
                                },
                                body: JSON.stringify({
                                    product_id: productId
                                })
                            })
                            .then(response => response.json())
                            .then(data => {
                                const gradeSelect = document.getElementById('grade_select');
                                const sizeSelect = document.getElementById('size_select');

                                const parameterSelect = document.getElementById('parameter_select');

                                gradeSelect.innerHTML = '<option value="">-- Select Grade --</option>';
                                if (data.result && data.result.grades && data.result.grades.length > 0) {
                                    gradeSelect.disabled = false;
                                    
                                    // Add each grades as an option
                                    data.result.grades.forEach(grade => {
                                        const option = document.createElement('option');
                                        option.value = grade.id;
                                        option.textContent = grade.name;
                                        gradeSelect.appendChild(option);
                                    });
                                    
                                }
                                sizeSelect.innerHTML = '<option value="">-- Select Size --</option>';
                                if (data.result && data.result.sizes && data.result.sizes.length > 0) {
                                    sizeSelect.disabled = false;
                                    
                                    // Add each sizes as an option
                                    data.result.sizes.forEach(size => {
                                        const option = document.createElement('option');
                                        option.value = size.id;
                                        option.textContent = size.name;
                                        sizeSelect.appendChild(option);
                                    });
                                    
                                }
        
                                // Clear existing options except the first one
                                parameterSelect.innerHTML = '<option value="">-- Select Parameters --</option>';
                                
                                // Check if we have groups in the response
                                if (data.result && data.result.parameters && data.result.parameters.length > 0) {
                                    // Enable the dropdown
                                    parameterSelect.disabled = false;
                                    
                                    // Add each parameters as an option
                                    data.result.parameters.forEach(parameter => {
                                        const option = document.createElement('option');
                                        option.value = parameter.id;
                                        option.textContent = parameter.name;
                                        parameterSelect.appendChild(option);
                                    });
                                    
                                    console.log(`Loaded ${data.result.parameters.length} parameters`);
                                } else {
                                    // No parameters found
                                    const option = document.createElement('option');
                                    option.value = '';
                                    option.textContent = 'No parameters available';
                                    parameterSelect.appendChild(option);
                                    parameterSelect.disabled = true;
                                    
                                }
                            })
                            .catch(error => {
                                console.error('Error:', error);
                                parameterSelect.innerHTML = '<option value="">Error loading parameters</option>';
                            });
                        }

                    }

                    function changeGroup(element) {
                        const groupId = element.value;
                        const productSelect = document.getElementById('product_select');
                        
                        // Reset dependent dropdowns
                        productSelect.innerHTML = '<option value="">-- Select Group --</option>';
                        productSelect.disabled = true;
                        productSelect.innerHTML = '<option value="">-- Select Product --</option>';
                        productSelect.disabled = true;
                        
                        if (groupId) {
                            // Show loading
                            productSelect.innerHTML = '<option value="">Loading...</option>';
                            // Fetch groups for selected discipline
                            fetch('/lerm/get_products', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                    
                                },
                                body: JSON.stringify({
                                    group_id: groupId
                                })
                            })
                            .then(response => response.json())
                            .then(data => {
                                const productSelect = document.getElementById('product_select');
        
                                // Clear existing options except the first one
                                productSelect.innerHTML = '<option value="">-- Select Product --</option>';
                                
                                // Check if we have groups in the response
                                if (data.result && data.result.products && data.result.products.length > 0) {
                                    // Enable the dropdown
                                    productSelect.disabled = false;
                                    
                                    // Add each products as an option
                                    data.result.products.forEach(product => {
                                        const option = document.createElement('option');
                                        option.value = product.id;
                                        option.textContent = product.name;
                                        productSelect.appendChild(option);
                                    });
                                    
                                    console.log(`Loaded ${data.result.products.length} products`);
                                } else {
                                    // No products found
                                    const option = document.createElement('option');
                                    option.value = '';
                                    option.textContent = 'No products available';
                                    productSelect.appendChild(option);
                                    productSelect.disabled = true;
                                    
                                    console.warn('No products found in response');
                                }
                            })
                            .catch(error => {
                                console.error('Error:', error);
                                productSelect.innerHTML = '<option value="">Error loading products</option>';
                            });
                        }
                    }

                    <!-- parameter master  -->
                    var selectedParameters = [];
        
                    // Open parameter modal
                    function openParameterModal() {
                        // Load parameters if not already loaded
                        if ($('#parameterList').children().length === 0) {
                            loadParameters();
                        }
                        $('#parameterModal').modal('show');
                    }
                    
                    // Fetch parameters from server
                    function loadParameters() {
                        $('#parameterList').html('<div class="col-md-12 text-center"><i class="fa fa-spinner fa-spin"/> Loading parameters...</div>');
                        
                        fetch('/lerm/get_parameters', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'X-CSRF-TOKEN': document.querySelector('input[name="csrf_token"]').value
                            },
                            body: JSON.stringify({})
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.result && data.result.parameters) {
                                renderParameters(data.result.parameters);
                            } else {
                                $('#parameterList').html('<div class="col-md-12 text-danger">Error loading parameters</div>');
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            $('#parameterList').html('<div class="col-md-12 text-danger">Error loading parameters</div>');
                        });
                    }


                    function saveParameters() {
                        const selectedOptions = Array.from(document.getElementById('parameter_select').selectedOptions);
                        
                        selectedParameters = selectedOptions.map(opt => ({
                            id: opt.value,
                            name: opt.text
                        }));

                        // Render selected parameters
                        const selectedDiv = document.getElementById('selected_parameters');
                        selectedDiv.innerHTML = '';
                        selectedParameters.forEach(param => {
                            const badge = document.createElement('span');
                            badge.className = 'badge badge-primary mr-1';
                            badge.innerText = param.name;
                            selectedDiv.appendChild(badge);
                        });

                        // Store IDs in hidden input
                        document.getElementById('parameter_ids').value = selectedParameters.map(p => p.id).join(',');

                        // Close modal
                        $('#parameterModal').modal('hide');
                    }
                    
                    
                ]]>
                    function openLineModal() {
                        $('#lineModal').modal('show');
                    }
                    
                    function addLineItem() {
                        const productId = product_select.value 
                        const groupId = group_select.value 
                        const gradeId = grade_select.value 
                        const sizeId = size_select.value 
                        const disciplineId = discipline_select.value 
                        const groupName = group_select.selectedOptions[0].childNodes[0].textContent 
                        const gradeName = grade_select.selectedOptions[0].childNodes[0].textContent 
                        const sizeName = size_select.selectedOptions[0].childNodes[0].textContent 
                        const productName = product_select.selectedOptions[0].childNodes[0].textContent 
                        const quantity = parseInt($('#modal_quantity').val());
                        const description = $('#modal_description').val();
                        
                        if (!productId) {
                            alert('Please select a product');
                            return;
                        }
                        let parameters = ''
                        for(let i=0;i&lt;=selectedParameters.length-1;i++){
                            if(i &lt; selectedParameters.length-1){
                                parameters = parameters + selectedParameters[i].name + ","
                            }else{
                                parameters = parameters + selectedParameters[i].name 
                            }
                        }
                        let parameters_ids = [];
                        for(let i = 0; i &lt; selectedParameters.length; i++) {
                            parameters_ids.push(selectedParameters[i].id);
                        }
                        let rowCount = document.getElementById('samples_table').children[1].children.length
                        <!-- debugger; -->
                        for(let i=0;i&lt;quantity;i++){
                            let discipline_id = 'discipline_id_'+rowCount
                            let group_id = 'group_id_'+rowCount
                            let product_name = 'product_name_'+rowCount
                            let grade_id = 'grade_id_'+rowCount
                            let size_id = 'size_id_'+rowCount
                            let quantity_name = 'quantity_'+rowCount
                            let description_name = 'description_'+rowCount
                            let parameter_line = 'parameter_line_'+rowCount


                        
                        
                            const newRow = `
                                <tr>
                                    <td>
                                        <input type="hidden" name="${discipline_id}" value="${disciplineId}"/>
                                        <input type="hidden" name="${group_id}" value="${groupId}"/>
                                        ${groupName}
                                    </td>
                                    <td>

                                        <input type="hidden" name="${product_name}" value="${productId}"/>
                                        ${productName}
                                    </td>
                                    <td>

                                        <input type="hidden" name="${grade_id}" value="${gradeId}"/>
                                        ${gradeName}
                                    </td>
                                    <td>

                                        <input type="hidden" name="${size_id}" value="${sizeId}"/>
                                        ${sizeName}
                                    </td>
                                    
                                    <!-- <td>
                                        <input type="hidden" name="${quantity_name}" value="${quantity}"/>
                                        ${quantity}
                                    </td> -->
                                    <td>
                                        <input type="hidden" name="${description_name}" value="${description}"/>
                                        ${description}
                                    </td>
                                    <td>
                                        <input type="hidden" name="${parameter_line}" value="${parameters_ids}"/>
                                        ${parameters}
                                    </td>
                                    <td>
                                        <button type="button" class="btn btn-danger btn-sm" onclick="$(this).closest('tr').remove()">
                                            <i class="fa fa-trash"/>
                                        </button>
                                    </td>
                                </tr>
                            `;
                            
                            $('#line_items').append(newRow);
                            $('#lineModal').modal('hide');
                            rowCount = rowCount + 1;
                        }
                        // Reset modal fields
                        <!-- $('#modal_product_id').val(''); -->
                        product_select.value = ""
                        group_select.value = ""
                        discipline_select.value = ""
                        parameter_select.value = ""
                        $('#modal_quantity').val('1');
                        $('#modal_description').val('');

                        product_select.value = ""
                        grade_select.value = ""
                        size_select.value = ""
                        
                        const selected_parameters = document.getElementById('selected_parameters');
                        while (selected_parameters.firstChild) {
                            selected_parameters.removeChild(selected_parameters.firstChild);
                        }
                        

                    }
                </script>
                <style>
                    .parameter-card {
                        cursor: pointer;
                        transition: all 0.2s;
                    }
                    .parameter-card:hover {
                        box-shadow: 0 0 5px rgba(0,0,0,0.1);
                    }
                    .parameter-card.border-primary {
                        background-color: rgba(0,123,255,0.05);
                    }
                    #selected_parameters .badge {
                        font-size: 0.9rem;
                        padding: 0.35em 0.65em;
                    }
                    #selected_parameters .close {
                        font-size: 1rem;
                        line-height: 1;
                    }
                </style>
            </t>
    </template>

    <template id="view_sample_request" name="View Sample Request">
        <t t-call="portal.portal_layout">
            <div class="container mt-4">
                <div class="card">
                    <div class="card-header bg-light">
                        <h4 class="mb-0">Sample Request Details</h4>
                    </div>
                    
                    <div class="card-body">
                        <!-- Alias -->
                        <div class="form-group row border-bottom pb-3 mb-3">
                            <label class="col-md-2 col-form-label font-weight-bold">Alias</label>
                            <div class="col-md-10">
                                <p class="form-control-plaintext"><t t-esc="csr.partner_id.name"/></p>
                            </div>
                        </div>
                        
                        <!-- Date and Project -->
                        <div class="form-group row border-bottom pb-3 mb-3">
                            <div class="col-md-6">
                                <div class="row">
                                    <label class="col-md-4 col-form-label font-weight-bold">Date</label>
                                    <div class="col-md-8">
                                        <p class="form-control-plaintext"><t t-esc="csr.date"/></p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="row">
                                    <label class="col-md-4 col-form-label font-weight-bold">Project</label>
                                    <div class="col-md-8">
                                        <p class="form-control-plaintext"><t t-esc="csr.project.project_name"/></p>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Billing Customer -->
                        <div class="form-group row">
                            <label class="col-md-2 col-form-label font-weight-bold">Billing Customer</label>
                            <div class="col-md-10">
                                <p class="form-control-plaintext"><t t-esc="csr.billing_customer.name"/></p>
                            </div>
                        </div>
                    </div>
                    
                    <div class="table-responsive">
                        <table class="table table-bordered table-striped align-middle">
                            <thead>
                            <tr>
                                <th>Group</th>
                                <th>Product</th>
                                <th>Grade</th>
                                <th>Size</th>
                                <th>Parameters</th>
                                <th>Report</th>
                            </tr>
                            </thead>
                            <tbody>
                            <t t-foreach="csr.samples" t-as="sample">
                                <tr>
                                    <td>
                                        <t t-esc="sample.group_id.group"/>
                                    </td>
                                    <td>
                                        <t t-esc="sample.product_id.name"/>
                                    </td>
                                    <td>
                                        <t t-esc="sample.grade_id.grade"/>
                                    </td>
                                    <td>
                                        <t t-esc="sample.size_id.size"/>
                                    </td>
                                    <td style="max-width: 250px; vertical-align: top;display:flex;flex-wrap:wrap;">
                                        <!-- <div style="max-width:inherit;display:flex;flex-wrap:wrap;"> -->
                                            <t t-foreach="sample.parameters" t-as="parameter">
                                                <span class="parameter">
                                                    <t t-esc="parameter.parameter_name"/>
                                                </span>
                                            </t>
                                        <!-- </div> -->
                                    </td>
                                    <td style="vertical-align: top;">
                                        <t t-if="env['lerm.srf.sample'].sudo().search([('customer_portal_sample','=',sample.id)]).display_report_portal">
                                            <a t-attf-href="/download/sample/report/nabl/{{sample.id}}" class="btn btn-sm btn-success mt-2">
                                                <i class="fa fa-download"></i> Download NABL Report
                                            </a>
                                            <a t-attf-href="/download/sample/report/nonnabl/{{sample.id}}" class="btn btn-sm btn-success mt-2">
                                                <i class="fa fa-download"></i> Download Non NABL Report
                                            </a>
                                        </t>
                                        <t t-else="">
                                            -
                                        </t>
                                    </td>
                                </tr>
                            </t>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </t>
        <style>
            .parameter {
                max-width: inherit;
                background-color: #30cbb2;
                padding: 2px;
                color: black;
                font-weight: 501;
                border-radius: 5px;
                font-size: 0.75rem;
            }
        </style>
    </template>


    <template id="sample_reports_list" name="Sample Reports List">
        <t t-call="portal.portal_layout">
            <div class="container">
                
                <!-- Pagination controls at the top -->
                <div class="row mb-3">
                    <div class="col-md-6">
                        <span t-if="page &gt; 1">
                            <a t-att-href="'/viewReports?page=%s' % (page-1)" class="btn btn-sm btn-outline-primary">
                                Previous
                            </a>
                        </span>
                        <span class="mx-2">Page <t t-esc="page"/> of <t t-esc="total_pages"/></span>
                        <span t-if="page &lt; total_pages">
                            <a t-att-href="'/viewReports?page=%s' % (page+1)" class="btn btn-sm btn-outline-primary">
                                Next
                            </a>
                        </span>
                    </div>
                    <div class="col-md-6 text-right">
                        <span class="text-muted">
                            Showing <t t-esc="offset+1"/> to <t t-esc="min(offset+limit, total)"/> of <t t-esc="total"/> records
                        </span>
                    </div>
                </div>

                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Project</th>
                            <th>Material</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <t t-foreach="samples or []" t-as="sample">
                            <tr>
                                
                                <td><t t-esc="sample.srf_id.name_work.project_name"/></td>
                                <td>
                                    <t t-esc="sample.material_id.lab_name"/>
                                </td>
                               
                                <td>
                                    <a t-attf-href="/downloadSampleReportNabl/{{sample.id}}" class="btn btn-sm btn-outline-info mr-2">
                                        <i class="fa fa-download"></i> Download NABL Report
                                    </a>
                                    <a t-attf-href="/downloadSampleReportNonNabl/{{sample.id}}" class="btn btn-sm btn-outline-info mr-2">
                                        <i class="fa fa-download"></i> Download Non NABL Report
                                    </a>
                                </td>
                            </tr>
                        </t>
                        <t t-if="not samples">
                            <tr>
                                <td colspan="5" class="text-center">No records found</td>
                            </tr>
                        </t>
                    </tbody>
                </table>

                <!-- Pagination controls at the bottom -->
                <div class="row mt-3">
                    <div class="col-md-12 text-center">
                        <span t-if="page &gt; 1">
                            <a t-att-href="'/viewReports?page=%s' % (page-1)" class="btn btn-sm btn-outline-primary">
                                Previous
                            </a>
                        </span>
                        <t t-foreach="range(1, total_pages+1)" t-as="p">
                            <a t-attf-href="/viewReports?page={{p}}"
                            t-att-class="'btn btn-sm ' + ('btn-primary' if p == page else 'btn-outline-primary')">
                                <t t-esc="p"/>
                            </a>
                        </t>
                        <span t-if="page &lt; total_pages">
                            <a t-att-href="'/viewReports?page=%s' % (page+1)" class="btn btn-sm btn-outline-primary">
                                Next
                            </a>
                        </span>
                    </div>
                </div>
            </div>

            
        </t>


    </template>
</odoo>